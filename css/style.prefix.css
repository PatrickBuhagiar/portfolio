/**
      0 - 600px:  Phone
    600 - 900px:  Tablet Portrait
   900 - 1200px:  Tablet landscape
[1200 - 1800px]:  Our Normal Styles apply
      1800px + :  Big Desktop

  $breakpoint argument choices:
    - phone
    - tab-port
    - tab-land
    - big-desktop

    em is the best option for media queries, not rem.

    ORDER to making stuff responsive:
      Base + typography > general layout + grid > page layout > components
 */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /*
  Automatically inherit in all elements whatever we set
  in body.
   */
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /*

  This will act as a basis for all our REM calculations.

  The root font size is usually 16px. So 10px is 62.5%,
  and thus 1REM = 10px.

  REM is not supported by IE < 9
  */
  font-size: 62.5%; }
  @media only screen and (max-width: 75em) {
    html {
      font-size: 56.25%; } }
  @media only screen and (max-width: 56.25em) {
    html {
      font-size: 50%; } }
  @media only screen and (min-width: 112.5em) {
    html {
      font-size: 75%; } }

body {
  height: 100%;
  width: 100%; }

.container {
  display: grid;
  grid-template-rows: 80vh -webkit-min-content 40vw repeat(3, -webkit-min-content);
  grid-template-rows: 80vh min-content 40vw repeat(3, min-content);
  grid-template-columns: [left-pad-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(-webkit-min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [right-pad-end];
  grid-template-columns: [left-pad-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [right-pad-end]; }

@-webkit-keyframes moveInLeft {
  /* Best practice is to always
     animate the opacity and transform
     properties for best performance */
  0% {
    /* start */
    opacity: 0;
    -webkit-transform: translateX(-10em);
            transform: translateX(-10em); }
  100% {
    /* finish */
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0); } }

@keyframes moveInLeft {
  /* Best practice is to always
     animate the opacity and transform
     properties for best performance */
  0% {
    /* start */
    opacity: 0;
    -webkit-transform: translateX(-10em);
            transform: translateX(-10em); }
  100% {
    /* finish */
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0); } }

@-webkit-keyframes moveInRight {
  /* Best practice is to always
     animate the opacity and transform
     properties for best performance */
  0% {
    /* start */
    opacity: 0;
    -webkit-transform: translateX(10rem);
            transform: translateX(10rem); }
  100% {
    /* finish */
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0); } }

@keyframes moveInRight {
  /* Best practice is to always
     animate the opacity and transform
     properties for best performance */
  0% {
    /* start */
    opacity: 0;
    -webkit-transform: translateX(10rem);
            transform: translateX(10rem); }
  100% {
    /* finish */
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0); } }

@-webkit-keyframes moveInBottom {
  /* Best practice is to always
     animate the opacity and transform
     properties for best performance */
  0% {
    /* start */
    opacity: 0;
    -webkit-transform: translateY(3rem);
            transform: translateY(3rem); }
  100% {
    /* finish */
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0); } }

@keyframes moveInBottom {
  /* Best practice is to always
     animate the opacity and transform
     properties for best performance */
  0% {
    /* start */
    opacity: 0;
    -webkit-transform: translateY(3rem);
            transform: translateY(3rem); }
  100% {
    /* finish */
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0); } }

@-webkit-keyframes moveInTop {
  /* Best practice is to always
     animate the opacity and transform
     properties for best performance */
  0% {
    /* start */
    opacity: 0;
    -webkit-transform: translateY(-3rem);
            transform: translateY(-3rem); }
  100% {
    /* finish */
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0); } }

@keyframes moveInTop {
  /* Best practice is to always
     animate the opacity and transform
     properties for best performance */
  0% {
    /* start */
    opacity: 0;
    -webkit-transform: translateY(-3rem);
            transform: translateY(-3rem); }
  100% {
    /* finish */
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0); } }

body {
  font-family: "Montserrat", sans-serif;
  color: #1D2731;
  font-weight: 300;
  line-height: 1.6; }

.heading-1, .heading-2, .heading-3, .heading-4, .heading-5 {
  font-family: "Fjalla One", sans-serif;
  font-weight: 400;
  text-shadow: 0.3rem 0.3rem 1rem rgba(0, 0, 0, 0.4);
  text-transform: uppercase; }

.heading-1 {
  font-size: 7rem;
  letter-spacing: 2px; }

.heading-2 {
  font-size: 4rem; }

.heading-3 {
  font-size: 2rem; }

.heading-4 {
  font-size: 1.6rem; }

.heading-5 {
  font-size: 1.2rem; }

strong {
  font-weight: 600; }

.p1, .p2, .p3 {
  font-weight: 400;
  color: #f5f5f5;
  text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.4); }

.p1 {
  font-size: 3rem; }

.p2 {
  font-size: 2rem; }

.p3 {
  font-size: 1.6rem; }

header.header {
  display: grid;
  grid-column: 1 / -1;
  grid-row-gap: 1.5rem;
  grid-template-rows: 1fr minmax(16rem, -webkit-max-content) 1fr;
  grid-template-rows: 1fr minmax(16rem, max-content) 1fr;
  grid-template-columns: 1fr minmax(50%, -webkit-min-content) 3fr;
  grid-template-columns: 1fr minmax(50%, min-content) 3fr; }

section.projects {
  grid-column: center-start / center-end; }

section.skills {
  grid-column: center-start / center-end; }

footer.footer {
  grid-column: 1 / -1; }

.header {
  background-image: -webkit-gradient(linear, right top, left bottom, from(#0b3c5d), to(rgba(11, 60, 93, 0.7))), url("../../img/header-small.jpg");
  background-image: linear-gradient(to bottom left, #0b3c5d, rgba(11, 60, 93, 0.7)), url("../../img/header-small.jpg");
  background-size: cover;
  background-position: top;
  height: 75vh;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transition: all .4s;
  transition: all .4s; }
  @supports ((-webkit-clip-path: polygon(0 0)) or (clip-path: polygon(0 0))) or (-webkit-clip-path: polygon(0 0)) {
    .header {
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 60vh, 0 100%);
      clip-path: polygon(0 0, 100% 0, 100% 60vh, 0 100%); } }
  .header__text {
    grid-column: 2 / span 1;
    grid-row: 2 / span 1; }
  .header__greeting {
    color: #f5f5f5;
    -webkit-animation: moveInLeft 1.5s cubic-bezier(0.65, 0.05, 0.36, 1);
            animation: moveInLeft 1.5s cubic-bezier(0.65, 0.05, 0.36, 1); }
  .header__intro {
    -webkit-animation: moveInRight 1.5s cubic-bezier(0.65, 0.05, 0.36, 1) 1.3s;
            animation: moveInRight 1.5s cubic-bezier(0.65, 0.05, 0.36, 1) 1.3s;
    -webkit-animation-fill-mode: backwards;
            animation-fill-mode: backwards;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; }

.skills {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));
  grid-gap: 7rem; }
  .skills__header {
    grid-column: 1 / -1; }
  .skills__grid {
    grid-column: 1 / -1; }
  .skills__skill {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    justify-items: center; }
  .skills__logo {
    height: 5rem;
    width: 5rem; }
  .skills__logo-description {
    color: #1D2731; }

/*
Notes:

box model default:
    - everything is a rectangle with:
        - content
        - width
        - height
        - padding
        - border
        - margin
        - fill area (area that gets filled with background color)
    - total width = r border + r padding + specified width + l padding + l border
    - total height = t border + t padding + specified height + b padding + b border

box model border-box
    - the specified width and height will span across border and padding,
      not just content area

box types:
    - block-level
        - elements formatted visually as blocks
        - 100% of parent's width
        - vertically, one after another
        - box-model applies
        - e.g.
            display: block, flex, list-item, table
    - inline
        - content is distributed in lines
        - occupies only content's space
        - no line-breaks
        - no heights and widths
        - padding and margins only horizontal
        - e.g.
            display: inline-block
    - inline-block
        - a mix of both
        - occupies only content's space
        - no line-breaks
        - box-model applies as showed
        - e.g.
            display: inline

positioning:
    - normal flow
        - default
        - not floated
        - not absolutely positioned
        - elements laid out according to their source order
        - e.g.
            - position: relative
    - floats
        - Element is removed from the normal flow
        - Text and inline elements will wrap around the floated element.
        - The container will not adjust its height to the element.
        - e.g.
            - float: left, float: right
    - Absolute positioning
        - element is removed from the normal flow
        - no impact on surrounding content or elements
        - we use top/bottom/left/right to offset the element from its relatively positioned container.
        - e.g.
            - position: absolute, position: fixed

stacking contexts
    - z-index (there are other ways, lke transform and filter)
*/

/*# sourceMappingURL=data:application/json;base64,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Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBa0VFIiwiZmlsZSI6InN0eWxlLnByZWZpeC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICAgICAgMCAtIDYwMHB4OiAgUGhvbmVcclxuICAgIDYwMCAtIDkwMHB4OiAgVGFibGV0IFBvcnRyYWl0XHJcbiAgIDkwMCAtIDEyMDBweDogIFRhYmxldCBsYW5kc2NhcGVcclxuWzEyMDAgLSAxODAwcHhdOiAgT3VyIE5vcm1hbCBTdHlsZXMgYXBwbHlcclxuICAgICAgMTgwMHB4ICsgOiAgQmlnIERlc2t0b3BcclxuXHJcbiAgJGJyZWFrcG9pbnQgYXJndW1lbnQgY2hvaWNlczpcclxuICAgIC0gcGhvbmVcclxuICAgIC0gdGFiLXBvcnRcclxuICAgIC0gdGFiLWxhbmRcclxuICAgIC0gYmlnLWRlc2t0b3BcclxuXHJcbiAgICBlbSBpcyB0aGUgYmVzdCBvcHRpb24gZm9yIG1lZGlhIHF1ZXJpZXMsIG5vdCByZW0uXHJcblxyXG4gICAgT1JERVIgdG8gbWFraW5nIHN0dWZmIHJlc3BvbnNpdmU6XHJcbiAgICAgIEJhc2UgKyB0eXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXQgPiBjb21wb25lbnRzXHJcbiAqL1xuKixcbio6OmFmdGVyLFxuKjo6YmVmb3JlIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICAvKlxyXG4gIEF1dG9tYXRpY2FsbHkgaW5oZXJpdCBpbiBhbGwgZWxlbWVudHMgd2hhdGV2ZXIgd2Ugc2V0XHJcbiAgaW4gYm9keS5cclxuICAgKi9cbiAgYm94LXNpemluZzogaW5oZXJpdDsgfVxuXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLypcclxuXHJcbiAgVGhpcyB3aWxsIGFjdCBhcyBhIGJhc2lzIGZvciBhbGwgb3VyIFJFTSBjYWxjdWxhdGlvbnMuXHJcblxyXG4gIFRoZSByb290IGZvbnQgc2l6ZSBpcyB1c3VhbGx5IDE2cHguIFNvIDEwcHggaXMgNjIuNSUsXHJcbiAgYW5kIHRodXMgMVJFTSA9IDEwcHguXHJcblxyXG4gIFJFTSBpcyBub3Qgc3VwcG9ydGVkIGJ5IElFIDwgOVxyXG4gICovXG4gIGZvbnQtc2l6ZTogNjIuNSU7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NWVtKSB7XG4gICAgaHRtbCB7XG4gICAgICBmb250LXNpemU6IDU2LjI1JTsgfSB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTYuMjVlbSkge1xuICAgIGh0bWwge1xuICAgICAgZm9udC1zaXplOiA1MCU7IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDExMi41ZW0pIHtcbiAgICBodG1sIHtcbiAgICAgIGZvbnQtc2l6ZTogNzUlOyB9IH1cblxuYm9keSB7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7IH1cblxuLmNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtcm93czogODB2aCBtaW4tY29udGVudCA0MHZ3IHJlcGVhdCgzLCBtaW4tY29udGVudCk7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogW2xlZnQtcGFkLXN0YXJ0XSBtaW5tYXgoNnJlbSwgMWZyKSBbY2VudGVyLXN0YXJ0XSByZXBlYXQoOCwgW2NvbC1zdGFydF0gbWlubWF4KG1pbi1jb250ZW50LCAxNHJlbSkgW2NvbC1lbmRdKSBbY2VudGVyLWVuZF0gbWlubWF4KDZyZW0sIDFmcikgW3JpZ2h0LXBhZC1lbmRdOyB9XG5cbkBrZXlmcmFtZXMgbW92ZUluTGVmdCB7XG4gIC8qIEJlc3QgcHJhY3RpY2UgaXMgdG8gYWx3YXlzXHJcbiAgICAgYW5pbWF0ZSB0aGUgb3BhY2l0eSBhbmQgdHJhbnNmb3JtXHJcbiAgICAgcHJvcGVydGllcyBmb3IgYmVzdCBwZXJmb3JtYW5jZSAqL1xuICAwJSB7XG4gICAgLyogc3RhcnQgKi9cbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTBlbSk7IH1cbiAgMTAwJSB7XG4gICAgLyogZmluaXNoICovXG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwKTsgfSB9XG5cbkBrZXlmcmFtZXMgbW92ZUluUmlnaHQge1xuICAvKiBCZXN0IHByYWN0aWNlIGlzIHRvIGFsd2F5c1xyXG4gICAgIGFuaW1hdGUgdGhlIG9wYWNpdHkgYW5kIHRyYW5zZm9ybVxyXG4gICAgIHByb3BlcnRpZXMgZm9yIGJlc3QgcGVyZm9ybWFuY2UgKi9cbiAgMCUge1xuICAgIC8qIHN0YXJ0ICovXG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTByZW0pOyB9XG4gIDEwMCUge1xuICAgIC8qIGZpbmlzaCAqL1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCk7IH0gfVxuXG5Aa2V5ZnJhbWVzIG1vdmVJbkJvdHRvbSB7XG4gIC8qIEJlc3QgcHJhY3RpY2UgaXMgdG8gYWx3YXlzXHJcbiAgICAgYW5pbWF0ZSB0aGUgb3BhY2l0eSBhbmQgdHJhbnNmb3JtXHJcbiAgICAgcHJvcGVydGllcyBmb3IgYmVzdCBwZXJmb3JtYW5jZSAqL1xuICAwJSB7XG4gICAgLyogc3RhcnQgKi9cbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgzcmVtKTsgfVxuICAxMDAlIHtcbiAgICAvKiBmaW5pc2ggKi9cbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDApOyB9IH1cblxuQGtleWZyYW1lcyBtb3ZlSW5Ub3Age1xuICAvKiBCZXN0IHByYWN0aWNlIGlzIHRvIGFsd2F5c1xyXG4gICAgIGFuaW1hdGUgdGhlIG9wYWNpdHkgYW5kIHRyYW5zZm9ybVxyXG4gICAgIHByb3BlcnRpZXMgZm9yIGJlc3QgcGVyZm9ybWFuY2UgKi9cbiAgMCUge1xuICAgIC8qIHN0YXJ0ICovXG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTNyZW0pOyB9XG4gIDEwMCUge1xuICAgIC8qIGZpbmlzaCAqL1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCk7IH0gfVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiLCBzYW5zLXNlcmlmO1xuICBjb2xvcjogIzFEMjczMTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgbGluZS1oZWlnaHQ6IDEuNjsgfVxuXG4uaGVhZGluZy0xLCAuaGVhZGluZy0yLCAuaGVhZGluZy0zLCAuaGVhZGluZy00LCAuaGVhZGluZy01IHtcbiAgZm9udC1mYW1pbHk6IFwiRmphbGxhIE9uZVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNDAwO1xuICB0ZXh0LXNoYWRvdzogMC4zcmVtIDAuM3JlbSAxcmVtIHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuXG4uaGVhZGluZy0xIHtcbiAgZm9udC1zaXplOiA3cmVtO1xuICBsZXR0ZXItc3BhY2luZzogMnB4OyB9XG5cbi5oZWFkaW5nLTIge1xuICBmb250LXNpemU6IDRyZW07IH1cblxuLmhlYWRpbmctMyB7XG4gIGZvbnQtc2l6ZTogMnJlbTsgfVxuXG4uaGVhZGluZy00IHtcbiAgZm9udC1zaXplOiAxLjZyZW07IH1cblxuLmhlYWRpbmctNSB7XG4gIGZvbnQtc2l6ZTogMS4ycmVtOyB9XG5cbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7IH1cblxuLnAxLCAucDIsIC5wMyB7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGNvbG9yOiAjZjVmNWY1O1xuICB0ZXh0LXNoYWRvdzogMC41cmVtIDFyZW0gMnJlbSByZ2JhKDAsIDAsIDAsIDAuNCk7IH1cblxuLnAxIHtcbiAgZm9udC1zaXplOiAzcmVtOyB9XG5cbi5wMiB7XG4gIGZvbnQtc2l6ZTogMnJlbTsgfVxuXG4ucDMge1xuICBmb250LXNpemU6IDEuNnJlbTsgfVxuXG5oZWFkZXIuaGVhZGVyIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC1jb2x1bW46IDEgLyAtMTtcbiAgZ3JpZC1yb3ctZ2FwOiAxLjVyZW07XG4gIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIG1pbm1heCgxNnJlbSwgbWF4LWNvbnRlbnQpIDFmcjtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgbWlubWF4KDUwJSwgbWluLWNvbnRlbnQpIDNmcjsgfVxuXG5zZWN0aW9uLnByb2plY3RzIHtcbiAgZ3JpZC1jb2x1bW46IGNlbnRlci1zdGFydCAvIGNlbnRlci1lbmQ7IH1cblxuc2VjdGlvbi5za2lsbHMge1xuICBncmlkLWNvbHVtbjogY2VudGVyLXN0YXJ0IC8gY2VudGVyLWVuZDsgfVxuXG5mb290ZXIuZm9vdGVyIHtcbiAgZ3JpZC1jb2x1bW46IDEgLyAtMTsgfVxuXG4uaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSBsZWZ0LCAjMGIzYzVkLCByZ2JhKDExLCA2MCwgOTMsIDAuNykpLCB1cmwoXCIuLi8uLi9pbWcvaGVhZGVyLXNtYWxsLmpwZ1wiKTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xuICBoZWlnaHQ6IDc1dmg7XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgdHJhbnNpdGlvbjogYWxsIC40czsgfVxuICBAc3VwcG9ydHMgKGNsaXAtcGF0aDogcG9seWdvbigwIDApKSBvciAoLXdlYmtpdC1jbGlwLXBhdGg6IHBvbHlnb24oMCAwKSkge1xuICAgIC5oZWFkZXIge1xuICAgICAgLXdlYmtpdC1jbGlwLXBhdGg6IHBvbHlnb24oMCAwLCAxMDAlIDAsIDEwMCUgNjB2aCwgMCAxMDAlKTtcbiAgICAgIGNsaXAtcGF0aDogcG9seWdvbigwIDAsIDEwMCUgMCwgMTAwJSA2MHZoLCAwIDEwMCUpOyB9IH1cbiAgLmhlYWRlcl9fdGV4dCB7XG4gICAgZ3JpZC1jb2x1bW46IDIgLyBzcGFuIDE7XG4gICAgZ3JpZC1yb3c6IDIgLyBzcGFuIDE7IH1cbiAgLmhlYWRlcl9fZ3JlZXRpbmcge1xuICAgIGNvbG9yOiAjZjVmNWY1O1xuICAgIGFuaW1hdGlvbjogbW92ZUluTGVmdCAxLjVzIGN1YmljLWJlemllcigwLjY1LCAwLjA1LCAwLjM2LCAxKTsgfVxuICAuaGVhZGVyX19pbnRybyB7XG4gICAgYW5pbWF0aW9uOiBtb3ZlSW5SaWdodCAxLjVzIGN1YmljLWJlemllcigwLjY1LCAwLjA1LCAwLjM2LCAxKSAxLjNzO1xuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJhY2t3YXJkcztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDsgfVxuXG4uc2tpbGxzIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgxNXJlbSwgMWZyKSk7XG4gIGdyaWQtZ2FwOiA3cmVtOyB9XG4gIC5za2lsbHNfX2hlYWRlciB7XG4gICAgZ3JpZC1jb2x1bW46IDEgLyAtMTsgfVxuICAuc2tpbGxzX19ncmlkIHtcbiAgICBncmlkLWNvbHVtbjogMSAvIC0xOyB9XG4gIC5za2lsbHNfX3NraWxsIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktaXRlbXM6IGNlbnRlcjsgfVxuICAuc2tpbGxzX19sb2dvIHtcbiAgICBoZWlnaHQ6IDVyZW07XG4gICAgd2lkdGg6IDVyZW07IH1cbiAgLnNraWxsc19fbG9nby1kZXNjcmlwdGlvbiB7XG4gICAgY29sb3I6ICMxRDI3MzE7IH1cblxuLypcclxuTm90ZXM6XHJcblxyXG5ib3ggbW9kZWwgZGVmYXVsdDpcclxuICAgIC0gZXZlcnl0aGluZyBpcyBhIHJlY3RhbmdsZSB3aXRoOlxyXG4gICAgICAgIC0gY29udGVudFxyXG4gICAgICAgIC0gd2lkdGhcclxuICAgICAgICAtIGhlaWdodFxyXG4gICAgICAgIC0gcGFkZGluZ1xyXG4gICAgICAgIC0gYm9yZGVyXHJcbiAgICAgICAgLSBtYXJnaW5cclxuICAgICAgICAtIGZpbGwgYXJlYSAoYXJlYSB0aGF0IGdldHMgZmlsbGVkIHdpdGggYmFja2dyb3VuZCBjb2xvcilcclxuICAgIC0gdG90YWwgd2lkdGggPSByIGJvcmRlciArIHIgcGFkZGluZyArIHNwZWNpZmllZCB3aWR0aCArIGwgcGFkZGluZyArIGwgYm9yZGVyXHJcbiAgICAtIHRvdGFsIGhlaWdodCA9IHQgYm9yZGVyICsgdCBwYWRkaW5nICsgc3BlY2lmaWVkIGhlaWdodCArIGIgcGFkZGluZyArIGIgYm9yZGVyXHJcblxyXG5ib3ggbW9kZWwgYm9yZGVyLWJveFxyXG4gICAgLSB0aGUgc3BlY2lmaWVkIHdpZHRoIGFuZCBoZWlnaHQgd2lsbCBzcGFuIGFjcm9zcyBib3JkZXIgYW5kIHBhZGRpbmcsXHJcbiAgICAgIG5vdCBqdXN0IGNvbnRlbnQgYXJlYVxyXG5cclxuYm94IHR5cGVzOlxyXG4gICAgLSBibG9jay1sZXZlbFxyXG4gICAgICAgIC0gZWxlbWVudHMgZm9ybWF0dGVkIHZpc3VhbGx5IGFzIGJsb2Nrc1xyXG4gICAgICAgIC0gMTAwJSBvZiBwYXJlbnQncyB3aWR0aFxyXG4gICAgICAgIC0gdmVydGljYWxseSwgb25lIGFmdGVyIGFub3RoZXJcclxuICAgICAgICAtIGJveC1tb2RlbCBhcHBsaWVzXHJcbiAgICAgICAgLSBlLmcuXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrLCBmbGV4LCBsaXN0LWl0ZW0sIHRhYmxlXHJcbiAgICAtIGlubGluZVxyXG4gICAgICAgIC0gY29udGVudCBpcyBkaXN0cmlidXRlZCBpbiBsaW5lc1xyXG4gICAgICAgIC0gb2NjdXBpZXMgb25seSBjb250ZW50J3Mgc3BhY2VcclxuICAgICAgICAtIG5vIGxpbmUtYnJlYWtzXHJcbiAgICAgICAgLSBubyBoZWlnaHRzIGFuZCB3aWR0aHNcclxuICAgICAgICAtIHBhZGRpbmcgYW5kIG1hcmdpbnMgb25seSBob3Jpem9udGFsXHJcbiAgICAgICAgLSBlLmcuXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xyXG4gICAgLSBpbmxpbmUtYmxvY2tcclxuICAgICAgICAtIGEgbWl4IG9mIGJvdGhcclxuICAgICAgICAtIG9jY3VwaWVzIG9ubHkgY29udGVudCdzIHNwYWNlXHJcbiAgICAgICAgLSBubyBsaW5lLWJyZWFrc1xyXG4gICAgICAgIC0gYm94LW1vZGVsIGFwcGxpZXMgYXMgc2hvd2VkXHJcbiAgICAgICAgLSBlLmcuXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZVxyXG5cclxucG9zaXRpb25pbmc6XHJcbiAgICAtIG5vcm1hbCBmbG93XHJcbiAgICAgICAgLSBkZWZhdWx0XHJcbiAgICAgICAgLSBub3QgZmxvYXRlZFxyXG4gICAgICAgIC0gbm90IGFic29sdXRlbHkgcG9zaXRpb25lZFxyXG4gICAgICAgIC0gZWxlbWVudHMgbGFpZCBvdXQgYWNjb3JkaW5nIHRvIHRoZWlyIHNvdXJjZSBvcmRlclxyXG4gICAgICAgIC0gZS5nLlxyXG4gICAgICAgICAgICAtIHBvc2l0aW9uOiByZWxhdGl2ZVxyXG4gICAgLSBmbG9hdHNcclxuICAgICAgICAtIEVsZW1lbnQgaXMgcmVtb3ZlZCBmcm9tIHRoZSBub3JtYWwgZmxvd1xyXG4gICAgICAgIC0gVGV4dCBhbmQgaW5saW5lIGVsZW1lbnRzIHdpbGwgd3JhcCBhcm91bmQgdGhlIGZsb2F0ZWQgZWxlbWVudC5cclxuICAgICAgICAtIFRoZSBjb250YWluZXIgd2lsbCBub3QgYWRqdXN0IGl0cyBoZWlnaHQgdG8gdGhlIGVsZW1lbnQuXHJcbiAgICAgICAgLSBlLmcuXHJcbiAgICAgICAgICAgIC0gZmxvYXQ6IGxlZnQsIGZsb2F0OiByaWdodFxyXG4gICAgLSBBYnNvbHV0ZSBwb3NpdGlvbmluZ1xyXG4gICAgICAgIC0gZWxlbWVudCBpcyByZW1vdmVkIGZyb20gdGhlIG5vcm1hbCBmbG93XHJcbiAgICAgICAgLSBubyBpbXBhY3Qgb24gc3Vycm91bmRpbmcgY29udGVudCBvciBlbGVtZW50c1xyXG4gICAgICAgIC0gd2UgdXNlIHRvcC9ib3R0b20vbGVmdC9yaWdodCB0byBvZmZzZXQgdGhlIGVsZW1lbnQgZnJvbSBpdHMgcmVsYXRpdmVseSBwb3NpdGlvbmVkIGNvbnRhaW5lci5cclxuICAgICAgICAtIGUuZy5cclxuICAgICAgICAgICAgLSBwb3NpdGlvbjogYWJzb2x1dGUsIHBvc2l0aW9uOiBmaXhlZFxyXG5cclxuc3RhY2tpbmcgY29udGV4dHNcclxuICAgIC0gei1pbmRleCAodGhlcmUgYXJlIG90aGVyIHdheXMsIGxrZSB0cmFuc2Zvcm0gYW5kIGZpbHRlcilcclxuKi9cbiJdfQ== */